# Main CI

name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.7 üêç
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - name: Install Nox
        run: python -m pip install nox==2020.8.22

      - name: Formatting
        run: nox -s fmt

  lint:
    needs: format
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.7 üêç
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - name: Install Nox
        run: python -m pip install nox==2020.8.22

      - name: Lint
        run: nox -s lint

  build:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.7 üêç
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - name: Build üî®
        run: |
          python -m pip install wheel
          python setup.py sdist
          python setup.py bdist_wheel

  build_windows:
    needs: lint
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.7 üêç
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - name: Install PyInstaller
        run: python -m pip install pyinstaller==5.4.1

      - name: Add entrypoint to bypass issue with relative imports in PyInstaller
        run: powershell -Command 'Invoke-WebRequest https://gist.githubusercontent.com/Wenzel/e38d227d94f16e026b3aed03ea6a6661/raw/383ec56d62c58e444f6c5962ee6940a5c583d341/stub.py -OutFile stub.py'

      - name: Build Windows release
        run: |
          python -m pip install -r requirements.txt
          pyinstaller --onefile --name checksec stub.py

      - name: Upload Windows release artefact
        uses: actions/upload-artifact@v2
        with:
          name: checksec.exe
          path: dist/checksec.exe

      # TODO: can't test rich output: UnicodeEncodeError: 'charmap' codec can't encode characters in position 0-78: character maps to <undefined>
      - name: Smoke test
        run: ./dist/checksec.exe C:\Windows --json

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Python 3.7 üêç
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - name: Install Nox
        run: python -m pip install nox==2020.8.22

      - name: Run tests
        run: nox -s test_e2e -- -s

  release:
    needs: test

    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.step_upload_url.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}

    # push on master and tag is 'v*'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v1
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: ${{ steps.get_version.outputs.version }}

      - id: step_upload_url
        run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"

  release_windows:
    needs: [build_windows, release]
    runs-on: windows-latest

    steps:
      # the deploy action below depends on a checkout of the repo
      # otherwise it fails trying to remote the 'origin' remote
      # https://github.com/JamesIves/github-pages-deploy-action/issues/335
      - uses: actions/checkout@v2

      # download artifacts
      - uses: actions/download-artifact@v2
        with:
          name: checksec.exe

      - name: Upload a Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: checksec.exe
          asset_name: checksec.exe
          asset_content_type: vnd.microsoft.portable-executable

  publish:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.7 üêç
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - name: Build üî®
        run: |
          python -m pip install wheel
          python setup.py sdist
          python setup.py bdist_wheel

      - name: Publish on PyPI üöÄ
        uses: pypa/gh-action-pypi-publish@v1.3.1
        with:
          user: __token__
          password: ${{ secrets.ACCESS_TOKEN }}
